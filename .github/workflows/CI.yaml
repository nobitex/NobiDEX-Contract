name: CI

on:
  push:
    branches:
      - development
      - master
  pull_request:
    branches:
      - development
      - master
jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v1
        with:
          node-version: 16.8.0
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run linters
        run: yarn lint

  unit-tests:
    needs: run-linters
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: 16.8.0
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: compile check
        run: npx hardhat console --network localhost
      - name: Run unit tests
        run: npx hardhat test

  static_security_check_slither:
    needs: [run-linters, unit-tests]
    name: Security
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testName:
          - Slither For HardHat
    steps:
      - uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v1
        with:
          node-version: 16.8.0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install node dependencies
        run: yarn install --frozen-lockfile
      - name: Install pip3
        run: |
          python -m pip install --upgrade pip
      - name: Install slither
        run: |
          pip3 install slither-analyzer
      - name: Run slither
        run: slither --sarif=results.sarif .
        continue-on-error: true
      # - name: Upload SARIF file
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     sarif_file: ./results.sarif

  # compare_gas_reports:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive

  #     - name: Install Foundry
  #       uses: onbjerg/foundry-toolchain@v1
  #       with:
  #         version: nightly

  #     # Add any step generating a gas report to a temporary file named gasreport.ansi. For example:
  #     - name: Run tests
  #       run: FOUNDRY_PROFILE=new forge test --match-path Foundry/test/testDexpresso.t.sol --match-contract test  --gas-report > gasreport.ansi # <- this file name should be unique in your repository!
  #       env:
  #         # make fuzzing semi-deterministic to avoid noisy gas cost estimation
  #         # due to non-deterministic fuzzing (but still use pseudo-random fuzzing seeds)
  #         FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}

  #     - name: Compare gas reports
  #       uses: Rubilmax/foundry-gas-diff@v3.13.2
  #       with:
  #         summaryQuantile: 0.9 # only display the 10% most significant gas diffs in the summary (defaults to 20%)
  #         sortCriteria: avg,max # sort diff rows by criteria
  #         sortOrders: desc,asc # and directions
  #         ignore: test-foundry/**/* # filter out gas reports from specific paths (test/ is included by default)
  #       id: gas_diff
  #     - name: Add gas diff to sticky comment
  #       if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
  #       uses: marocchino/sticky-pull-request-comment@v2
  #       with:
  #         # delete the comment in case changes no longer impact gas costs
  #         delete: ${{ !steps.gas_diff.outputs.markdown }}
  #         message: ${{ steps.gas_diff.outputs.markdown }}
